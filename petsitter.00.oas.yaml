openapi: 3.0.3
info:
  title: PetSitter API
  description: PetSitter API
  version: 1.0.0
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        password:
          type: string
        full_name:
          type: string
        roles:
          type: array
          items:
            type: string
    Job:
      type: object
      properties:
        id:
          type: integer
        creator_user_id:
          type: string
        start_time:
          type: string
        end_time:
          type: string
        activity:
          type: string
        dog:
          $ref: '#/components/schemas/Dog'
    Dog:
      type: object
      properties:
        name:
          type: string
        age:
          type: integer
        breed:
          type: string
        size:
          type: string
    JobApplication:
      type: object
      properties:
        id:
          type: integer
        status:
          type: integer
        user_id:
          type: integer
        job_id:
          type: integer
paths:
  /users:
    post:
      description: Create a new user
      summary: Register User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        200:
          description: Created
          headers:
            Location:
              schema:
                type: string

  /users/{id}:
    parameters:
      - schema:
          type: integer
        in: path
        name: id
        required: true
    get:
      description: Fetch a specific user.
      summary: View User
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      description: Update a specific user information
      summary: Modify User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      description: Delete a specific user
      summary: Delete User
      responses:
        204:
          description: No Content
  /users/{id}/job:
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
    get:
      summary: List jobs for User
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Job'
  /jobs:
    get:
      description: List all the Jobs
      summary: List all Jobs
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Job'
    post:
      description: Create a new Job
      summary: Create Job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
      responses:
        201:
          description: Job created
          headers:
            Location:
              schema:
                type: string
  /jobs/{id}:
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
    get:
      description: View a Job
      summary: View Job
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
    put:
      description: Update a Job
      summary: Modify Job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
    delete:
      summary: Delete job
      responses:
        204:
          description: No content
  /jobs/{id}/job-applications:
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
    get:
      summary: List applications for job
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/JobApplication'
    post:
      summary: Create Job Application
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobApplication'
      responses:
        201:
          description: Job application created
          headers:
            Location:
              schema:
                type: string
  /jobs-applications/{id}:
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
    put:
      summary: Modify job application
      requestBody:
        description: Update the application details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobApplication'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobApplication'